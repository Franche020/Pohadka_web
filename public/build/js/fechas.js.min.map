{"version":3,"sources":["fechas.js"],"names":["checkIn","document","querySelector","checkOut","room","querySelectorAll","formFecha","checkInValue","checkOutValue","eventListeners","addEventListener","e","target","value","comprobarEstado","eventListenersRooms","forEach","mostrarRoom","id","async","undefined","datosResultado","datos","FormData","append","url","respuesta","fetch","method","body","resultado","json","console","log","objeto","push","actualizarRooms","error","room1","room2","room3","room4","includes","classList","add","remove","roomN","obtenerHabitacion","charAt","overlay","createElement"],"mappings":"AAAA,MAAMA,QAAUC,SAASC,cAAc,YACjCC,SAAWF,SAASC,cAAc,aAClCE,KAAOH,SAASI,iBAAiB,SACjCC,UAAYL,SAASC,cAAc,eACzC,IAAIK,aACAC,cAMJ,SAASC,iBACLT,QAAQU,iBAAiB,UAAW,SAASC,GACzCJ,aAAeI,EAAEC,OAAOC,MACxBC,qBAEJX,SAASO,iBAAiB,UAAW,SAASC,GAC1CH,cAAgBG,EAAEC,OAAOC,MACzBC,qBAGR,SAASC,sBACDX,KAAKY,QAAQL,IACbA,EAAED,iBAAiB,QAASC,IACxBM,YAAYN,EAAEC,OAAOM,QAKjCC,eAAeL,kBAEX,QAAoBM,IAAjBb,mBAAgDa,IAAlBZ,eAA+BD,cAAcC,cAAe,CACzF,IAAIa,EAAiB,GAErB,MAAMC,EAAQ,IAAIC,SAClBD,EAAME,OAAO,UAAWjB,cACxBe,EAAME,OAAO,WAAYhB,eAEzB,IACI,MAAMiB,EAAM,kCACNC,QAAkBC,MAAMF,EAAK,CAC/BG,OAAQ,OACRC,KAAMP,IAEJQ,QAAkBJ,EAAUK,OAEJ,OAA1BD,EAAqB,WACrBE,QAAQC,IAAIH,GAERA,EAAqB,UAAEd,QAAQkB,IAC3Bb,EAAec,KAAKD,EAAiB,YAEzCE,gBAAgBf,KAEhBA,EAAiB,GACjBe,gBAAgBf,IAI1B,MAAOgB,GACLL,QAAQC,IAAII,KASxB,SAASD,gBAAgBd,GAGrB,MAAMgB,EAAQrC,SAASC,cAAc,UAC/BqC,EAAQtC,SAASC,cAAc,UAC/BsC,EAAQvC,SAASC,cAAc,UAC/BuC,EAAQxC,SAASC,cAAc,UAElCoB,EAAMoB,SAAS,MACdJ,EAAMK,UAAUC,IAAI,YACpBN,EAAMK,UAAUE,OAAO,cAEvBP,EAAMK,UAAUC,IAAI,YACpBN,EAAMK,UAAUE,OAAO,aAEvBvB,EAAMoB,SAAS,MACfH,EAAMI,UAAUC,IAAI,YACpBL,EAAMI,UAAUE,OAAO,cAEvBN,EAAMI,UAAUC,IAAI,YACpBL,EAAMI,UAAUE,OAAO,aAEvBvB,EAAMoB,SAAS,MACfF,EAAMG,UAAUC,IAAI,YACpBJ,EAAMG,UAAUE,OAAO,cAEvBL,EAAMG,UAAUC,IAAI,YACpBJ,EAAMG,UAAUE,OAAO,aAEvBvB,EAAMoB,SAAS,MACfD,EAAME,UAAUC,IAAI,YACpBH,EAAME,UAAUE,OAAO,cAEvBJ,EAAME,UAAUC,IAAI,YACpBH,EAAME,UAAUE,OAAO,aAG3B9B,sBAGJ,SAASE,YAAa6B,GAElBC,kBADmBD,EAAME,OAAO,IAKhC,MAAMC,EAAUhD,SAASiD,cAAc,OAC1BjD,SAASC,cAAc,SACpC+C,EAAQN,UAAUC,IAAI,WAwB1BzB,eAAe4B,kBAAmB7B,GAG9B,MAAMI,EAAQ,IAAIC,SAClBD,EAAME,OAAO,KAAMN,GAEnB,IACI,MAAMO,EAAM,iCACNC,QAAkBC,MAAMF,EAAK,CAC/BG,OAAQ,OACRC,KAAMP,IAEJQ,QAAkBJ,EAAUK,OAElCC,QAAQC,IAAIH,EAAsB,WAAM,IACxCE,QAAQC,IAAIH,EAAsB,WAAU,QAC5CE,QAAQC,IAAIH,EAAsB,WAAqB,mBACvDE,QAAQC,IAAIH,EAAsB,WAAoB,kBACtDE,QAAQC,IAAIH,EAAsB,WAAa,WAC/CE,QAAQC,IAAIH,EAAsB,WAAY,UAC9CE,QAAQC,IAAIH,EAAsB,WAAU,QAC5CE,QAAQC,IAAIH,EAAsB,WAAQ,MAE5C,MAAOO,GACLL,QAAQC,IAAII,IA9JpBpC,SAASS,iBAAiB,oBAAoB,WAC1CD","file":"fechas.js","sourcesContent":["const checkIn = document.querySelector('#checkin');\r\nconst checkOut = document.querySelector('#checkout');\r\nconst room = document.querySelectorAll('.room');\r\nconst formFecha = document.querySelector('#form-fecha');\r\nvar checkInValue;\r\nvar checkOutValue;\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    eventListeners();\r\n  });\r\n\r\nfunction eventListeners() {\r\n    checkIn.addEventListener('change' , function(e) {\r\n        checkInValue = e.target.value;\r\n        comprobarEstado();\r\n    })\r\n    checkOut.addEventListener('change' , function(e) {\r\n        checkOutValue = e.target.value;\r\n        comprobarEstado();\r\n    })\r\n}\r\nfunction eventListenersRooms() {\r\n        room.forEach(e => {\r\n        e.addEventListener('click', e=> {\r\n            mostrarRoom(e.target.id);\r\n        })\r\n    })  \r\n}\r\n\r\nasync function comprobarEstado() {\r\n\r\n    if(checkInValue !== undefined && checkOutValue !== undefined && checkInValue<=checkOutValue) {\r\n        let datosResultado = [];\r\n        \r\n        const datos = new FormData();\r\n        datos.append('checkIn', checkInValue);\r\n        datos.append('checkOut', checkOutValue);\r\n\r\n        try {\r\n            const url = 'http://localhost:3000/api/rooms'\r\n            const respuesta = await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n            const resultado = await respuesta.json();\r\n\r\n            if (resultado['resultado']!== null) {\r\n                console.log(resultado);\r\n                    //console.log(resultado['resultado']['castillo']);\r\n                    resultado['resultado'].forEach(objeto => {\r\n                        datosResultado.push(objeto['castillo']);\r\n                    });\r\n                    actualizarRooms(datosResultado);\r\n                } else {\r\n                    datosResultado = [];\r\n                    actualizarRooms(datosResultado);\r\n                }\r\n            \r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n\r\n    } else {\r\n        //alert('Wrong Dates');\r\n    }\r\n}\r\n\r\nfunction actualizarRooms(datos) {\r\n    //console.log(datos);\r\n\r\n    const room1 = document.querySelector('#room1');\r\n    const room2 = document.querySelector('#room2');\r\n    const room3 = document.querySelector('#room3');\r\n    const room4 = document.querySelector('#room4');\r\n\r\n    if(datos.includes('1')) {\r\n        room1.classList.add('reserved');\r\n        room1.classList.remove('avaiable');\r\n    } else {\r\n        room1.classList.add('avaiable');\r\n        room1.classList.remove('reserved');\r\n    }\r\n    if (datos.includes('2')) {\r\n        room2.classList.add('reserved');\r\n        room2.classList.remove('avaiable');\r\n    } else {\r\n        room2.classList.add('avaiable');\r\n        room2.classList.remove('reserved');\r\n    }\r\n    if (datos.includes('3')) {\r\n        room3.classList.add('reserved');\r\n        room3.classList.remove('avaiable');\r\n    } else {\r\n        room3.classList.add('avaiable');\r\n        room3.classList.remove('reserved');\r\n    }\r\n    if (datos.includes('4')) {\r\n        room4.classList.add('reserved');\r\n        room4.classList.remove('avaiable');\r\n    } else{\r\n        room4.classList.add('avaiable');\r\n        room4.classList.remove('reserved');\r\n    }\r\n\r\n    eventListenersRooms();\r\n}\r\n\r\nfunction mostrarRoom (roomN) {\r\n    const roomnumber = roomN.charAt(4);\r\n    obtenerHabitacion(roomnumber);\r\n\r\n    //TODO Fethc API\r\n\r\n    const overlay = document.createElement('DIV');\r\n    const body = document.querySelector('#body');\r\n    overlay.classList.add('Overlay');\r\n    // const host = window.location.host;\r\n    // const src = `https://${host}/room?id=${roomnumber}`\r\n\r\n    // iframe.src = src\r\n\r\n    // // Aplicar estilos CSS al iframe\r\n    // iframe.style.position = \"fixed\";\r\n    // iframe.style.top = \"0\";\r\n    // iframe.style.left = \"0\";\r\n    // iframe.style.width = \"100%\";\r\n    // iframe.style.height = \"100%\";\r\n    // iframe.style.border = \"none\";\r\n    // iframe.style.zIndex = \"9999\";\r\n\r\n  \r\n    // // Agregar el iframe al documento\r\n    // main.appendChild(iframe);\r\n     \r\n    // TODO Crear API el iframe no funciona\r\n    // TODO comprobar las clases para no actuar el evento   s\r\n    // TODO Mostrar pagina como overlay\r\n}\r\n\r\nasync function obtenerHabitacion (id) {\r\n    let habitacion = [];\r\n        \r\n    const datos = new FormData();\r\n    datos.append('id', id);\r\n\r\n    try {\r\n        const url = 'http://localhost:3000/api/room'\r\n        const respuesta = await fetch(url, {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n        const resultado = await respuesta.json();\r\n\r\n        console.log(resultado['habitacion']['id']);\r\n        console.log(resultado['habitacion']['nombre']);\r\n        console.log(resultado['habitacion']['descripcionIngles']);\r\n        console.log(resultado['habitacion']['descripcionCheco']);\r\n        console.log(resultado['habitacion']['capacidad']);\r\n        console.log(resultado['habitacion']['castillo']);\r\n        console.log(resultado['habitacion']['precio']);\r\n        console.log(resultado['habitacion']['tipo']);\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}"]}